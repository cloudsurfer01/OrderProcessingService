// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("OrderNumber");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.OwnsOne("Domain.ValueObjects.Address", "InvoiceAddress", b1 =>
                        {
                            b1.Property<Guid>("OrderNumber")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("InvoiceAddress");

                            b1.HasKey("OrderNumber");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderNumber");
                        });

                    b.OwnsOne("Domain.ValueObjects.CreditCardNumber", "CreditCardNumber", b1 =>
                        {
                            b1.Property<Guid>("OrderNumber")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("CreditCardNumber");

                            b1.HasKey("OrderNumber");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderNumber");
                        });

                    b.OwnsOne("Domain.ValueObjects.Email", "InvoiceEmailAddress", b1 =>
                        {
                            b1.Property<Guid>("OrderNumber")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("InvoiceEmailAddress");

                            b1.HasKey("OrderNumber");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderNumber");
                        });

                    b.OwnsMany("Domain.ValueObjects.Product", "Products", b1 =>
                        {
                            b1.Property<Guid>("OrderNumber")
                                .HasColumnType("uuid");

                            b1.Property<string>("ProductId")
                                .HasColumnType("text");

                            b1.Property<int>("ProductAmount")
                                .HasColumnType("integer");

                            b1.Property<string>("ProductName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<decimal>("ProductPrice")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("OrderNumber", "ProductId");

                            b1.ToTable("OrderProducts", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OrderNumber");
                        });

                    b.Navigation("CreditCardNumber");

                    b.Navigation("InvoiceAddress");

                    b.Navigation("InvoiceEmailAddress");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
